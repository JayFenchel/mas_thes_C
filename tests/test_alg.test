/*DO 
  checkmk tests/test_alg.test >tests/test_alg.c
*/
#include "../include/hhmpcalg.h"
#include "../include/hhmpcmath.h"
#include "../include/hhmpcusefull.h"

#define N 2
#define M 1
#define T 3

#test form_beta_test


#test form_Y_test
    real_t A[] = {1., 2., 1., 2.};
    real_t B[] = {-3., 1.};
    real_t C[] = {3., 1., 0., 0., 0., 0., 0., 0., 0.,
                  -1., 0., 1., 0., 0., 0., 0., 0., 0.,
                  0., -1., -2., 3., 1., 0., 0., 0., 0.,
                  0., -1., -2., -1., 0., 1., 0., 0., 0.,
                  0., 0., 0., 0., -1., -2., 3., 1., 0.,
                  0., 0., 0., 0., -1., -2., -1., 0., 1.};
    
    real_t Y[T*N*T*N] = {0., 0., 0., 0., 0., 0.,
                         0., 0., 0., 0., 0., 0.,
                         0., 0., 0., 0., 0., 0.,
                         0., 0., 0., 0., 0., 0.,
                         0., 0., 0., 0., 0., 0.,
                         0., 0., 0., 0., 0., 0.};
    real_t Phi[] = {4., 0., 0., 0., 0., 0., 0., 0., 0.,
                    0., 5., 2., 0., 0., 0., 0., 0., 0.,
                    0., 2., 4., -1., 0., 0., 0., 0., 0.,
                    0., 0., -1., 2., 0., 0., 0., 0., 0.,
                    0., 0., 0., 0., 5., 2., 0., 0., 0.,
                    0., 0., 0., 0., 2., 4., -1., 0., 0.,
                    0., 0., 0., 0., 0., -1., 3., 0., 0.,
                    0., 0., 0., 0., 0., 0., 0., 4., -3.,
                    0., 0., 0., 0., 0., 0., 0., -3., 4.};
                    
    real_t L_Phi_blocks[M*M + (T-1)*(N+M)*(N+M) + N*N]; /*blocks discribed in paper*/
    real_t L_Phi[T*(N+M)*T*(N+M)];
    uint32_t g;
    
    real_t L_Phi_ref[T*(N+M)*T*(N+M)];
    

                    
    real_t Y_ref[] = {271./108., -97/108., -5./27., 1./9., 0., 0.,
                      -97/108., 67/108., -1./27., -7./9., 0., 0.,
                      -5./27., -1./27., 4.959517657192076, -527./387., -5./43., 3./43.,
                      1./9., -7./9., -527./387, 346./129., -9./43., -29./43.,
                      0., 0., -5./43., -9./43., 1173./301., 10./301.,
                      0., 0., 3./43., -29./43., 10./301.,        725./301.};
   
                      
                      
    real_t beta[T*N];
    real_t rd[] = {1., 1., 1., 1., 1., 1., 1., 1., 1.};
    real_t rp[] = {1., 1., 1., 1., 1., 1.};
    real_t delta_v[T*N];
    real_t delta_z[T*(N+M)];
    real_t delta_z_ref[] = {-1.497130713389783, 
3.491392140169356, 
-2.497130713389777, 
-1.311592177863274, 
1.431907246979609, 
-3.814461464473480, 
-0.282106439809970, 
-6.350696362537439, 
-7.479122121777321};
    real_t delta_v_ref[] = {32.608067797050708, 
92.835680537592992, 
11.299205178363676, 
34.771561892754256, 
1.965419084817798, 
9.864399399496964};

    
    real_t C_T[T*N+M * T*N];
    real_t help1[T*(N+M)];                      
                      
    for(g = 0; g < T*(N+M)*T*(N+M); g++)
        L_Phi[g] = 0;

    
    form_Y(Y, L_Phi_blocks, Phi, T, A, N, B, M);
    
    setBlock(L_Phi, T*(N+M), L_Phi_blocks, M, M, 0, 0);
    setBlock(L_Phi, T*(N+M), L_Phi_blocks+M*M, N+M, N+M, M, M);
    setBlock(L_Phi, T*(N+M), L_Phi_blocks+M*M+1*(N+M)*(N+M), N+M, N+M, M+1*(N+M), M+1*(N+M));
    setBlock(L_Phi, T*(N+M), L_Phi_blocks+M*M+2*(N+M)*(N+M), N, N, M+2*(N+M), M+2*(N+M));
    
    cholesky(L_Phi_ref, Phi, T*(N+M));
    
    fail_unless(mtx_cmp(Y, Y_ref, 36, 1e-9) == 0, "form_Y failed");
    fail_unless(mtx_cmp(L_Phi, L_Phi_ref, T*(N+M)*T*(N+M), 0) == 0, "false L_Phi");
    

    
    form_beta(beta, L_Phi_blocks, rd, rp, T, C, N, M);
    

    
    form_delta_v(delta_v, Y, beta, T, N);
    
    
    mpcinc_mtx_transpose(C_T, C, T*N, T*(N+M));
    
    form_delta_z(delta_z, delta_v, L_Phi, rd, C_T, T, N, M);
    print_mtx(delta_z, T*(N+M), 1);
    
    fail_unless(mtx_cmp(delta_v, delta_v_ref, 6, 1e-9) == 0, "form_delta_v failed");
    fail_unless(mtx_cmp(delta_z, delta_z_ref, 9, 1e-10) == 0, "form_delta_z failed");
    
#test form_Y11_test
    real_t sol[N*N];
    real_t B[] = {-3., 1.};
    real_t R0_I[] = {-.5};
    real_t Q1[] = {1., 0., 0., 1.};
    
    real_t sol_ref[] = {37., -12., -12., 5.};
    form_Y11(sol, B, N, M, R0_I, Q1);
    fail_unless(mtx_cmp(sol, sol_ref, 4, 0) == 0, "form_Y11 failed");

#test setBlock_test
    real_t Phi[] = {1., 0., 0., 0., 0., 0.,
                    0., 2., 2., -2., 0., 0.,
                    0., 2., -2., 2., 0., 0.,
                    0., -2., 2., 2., 0., 0.,
                    0., 0., 0., 0., 3., -3.,
                    0., 0., 0., 0., -3., 3.};
    uint32_t dim = 6;
    real_t block[] = {1., 1., 0., 0., 1., 1., 0., 1., 0., 0., 0., 0.};
    real_t Phi_ref[] = {1., 0., 0., 0., 0., 0.,
                    0., 2., 2., -2., 0., 0.,
                    0., 2., -2., 1., 1., 0.,
                    0., -2., 2., 0., 1., 1.,
                    0., 0., 0., 0., 1., 0.,
                    0., 0., 0., 0., 0., 0.};

    setBlock(Phi, dim, block, 3, 4, 2, 3);
    fail_unless(mtx_cmp(Phi, Phi_ref, 36, 0) == 0, "setBlock failed");

#test getBlock_test
    real_t Phi[] = {1., 0., 0., 0., 0., 0.,
                    0., 2., 2., -2., 0., 0.,
                    0., 2., -2., 2., 0., 0.,
                    0., -2., 2., 2., 0., 0.,
                    0., 0., 0., 0., 3., -3.,
                    0., 0., 0., 0., -3., 3.};
    uint32_t dim = 6;
    real_t block[12];
    real_t block_ref[] = {2., 0., 0., 2., 0., 0., 0., 3., -3., 0., -3., 3.};
    uint32_t first_row = 2, first_col = 3, size_row = 3, size_col = 4;
    getBlock(block, Phi, dim, first_row, first_col, size_row, size_col);
    fail_unless(mtx_cmp(block, block_ref, 12, 0) == 0, "getBlock failed");
    
    