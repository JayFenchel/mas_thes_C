/*DO 
  checkmk tests/test_alg.test >tests/test_alg.c
*/
#include "../include/hhmpcalg.h"
#include "../include/hhmpcmath.h"

#define N 2
#define M 1
#define T 2

#test form_Y_test
    uint32_t i;
    real_t A[] = {1., 2., 1., 2.};
    real_t B[] = {-3.};
    real_t Y[T*N*T*N] = {0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.};
    real_t Phi[] = {1., 0., 0., 0., 0., 0.,
                    0., 2., 2., -2., 0., 0.,
                    0., 2., -2., 2., 0., 0.,
                    0., -2., 2., 2., 0., 0.,
                    0., 0., 0., 0., 3., -3.,
                    0., 0., 0., 0., -3., 3.};
    form_Y(Y, Phi, T, A, N, B, M);
    for (i = 0; i < 16; i++)
        printf("%f ", Y[i]);
    printf("\n");
    
    fail_unless(0 == 0, "form_Y failed");
    
#test form_Y11_test
    real_t sol[N*N];
    real_t B[] = {-3., 1.};
    real_t R0_I[] = {-.5};
    real_t Q1[] = {1., 0., 0., 1.};
    
    real_t sol_ref[] = {37., -12., -12., 5.};
    form_Y11(sol, B, N, M, R0_I, Q1);
    fail_unless(mtx_cmp(sol, sol_ref, 4) == 0, "form_Y11 failed");

#test setBlock_test
    real_t Phi[] = {1., 0., 0., 0., 0., 0.,
                    0., 2., 2., -2., 0., 0.,
                    0., 2., -2., 2., 0., 0.,
                    0., -2., 2., 2., 0., 0.,
                    0., 0., 0., 0., 3., -3.,
                    0., 0., 0., 0., -3., 3.};
    uint32_t dim = 6;
    real_t block[] = {1., 1., 0., 0., 1., 1., 0., 1., 0., 0., 0., 0.};
    real_t Phi_ref[] = {1., 0., 0., 0., 0., 0.,
                    0., 2., 2., -2., 0., 0.,
                    0., 2., -2., 1., 1., 0.,
                    0., -2., 2., 0., 1., 1.,
                    0., 0., 0., 0., 1., 0.,
                    0., 0., 0., 0., 0., 0.};

    setBlock(Phi, dim, block, 3, 4, 2, 3);
    fail_unless(mtx_cmp(Phi, Phi_ref, 36) == 0, "setBlock failed");

#test getBlock_test
    real_t Phi[] = {1., 0., 0., 0., 0., 0.,
                    0., 2., 2., -2., 0., 0.,
                    0., 2., -2., 2., 0., 0.,
                    0., -2., 2., 2., 0., 0.,
                    0., 0., 0., 0., 3., -3.,
                    0., 0., 0., 0., -3., 3.};
    uint32_t dim = 6;
    real_t block[12];
    real_t block_ref[] = {2., 0., 0., 2., 0., 0., 0., 3., -3., 0., -3., 3.};
    uint32_t first_row = 2, first_col = 3, size_row = 3, size_col = 4;
    getBlock(block, Phi, dim, first_row, first_col, size_row, size_col);
    fail_unless(mtx_cmp(block, block_ref, 12) == 0, "getBlock failed");
    
    